const puzzleInput = [
  ".#.#....###..#.#..............#",
  "#......#####..##.##.#.......#.#",
  ".###.....#..#.#..#..#.#......#.",
  ".........##.#.....#.#..........",
  "........##....#.......#.#..#..#",
  "#.#..####...#.....#.#.#...#....",
  "#....#...#.........#.....#..#.#",
  ".#..........#..#.............#.",
  "...##..##..#...####.#.#.#.#....",
  ".#...####............##....#...",
  "..##.....#.#......#......#.#.#.",
  "..##......#..##.....#.#.....#.#",
  "..#...#....#.#.........##......",
  "#..##..##..#..##....#....##.#.#",
  "..###.#....#.#.#...#......#.#.#",
  "....#...#...#.........#.....##.",
  ".#..#.#..........#.##.....#.#..",
  ".#...#...###..#..#..####.#...#.",
  "##..............#..#.#...###..#",
  ".#..#.#.#...#..#...#..#........",
  "..#.#......#.#..##...#.#..#....",
  "...#.#.....#.##..#...#..#......",
  "...#...##....##..#....#..#...#.",
  "#......##.#.......#...#..#.#...",
  ".#..#......####...#............",
  "...#..##.#...#....#.#.#.#......",
  "....##...........##.#.#...##...",
  "#.##.###........#..###.#..##...",
  "....#......#....##...##.#......",
  "#.............#...#.........#..",
  "..##.......#.......#.#...#...#.",
  "...#....####...#...#....#.###..",
  "...##......#...###.#...#....#..",
  "...#.............#...#.......#.",
  "...#..#.##.##.#..#.##.#..#....#",
  "..####.....#..#............#...",
  "##....##..#.#.#.#..#..#.....#..",
  "......##...##......#.#.........",
  "#.#............#.#.#..#......#.",
  "...#.#.#.....#..#..#.#..##.....",
  ".#.#.............###..#....##..",
  "....#.###..#..#.....#..#.##....",
  "..#.#....#.......#.......##..#.",
  ".#.##.#.#..#..##.........##....",
  "...#...###.##....#####.......#.",
  "......#.....##...##...#....#.#.",
  "###.......##..#.....#......#.#.",
  "...#..#..#....#.#.....##..#...#",
  "..#....##.......#....#.........",
  "#....##.........##......#.#..#.",
  "#.....#.#.#..##..#.#.....##....",
  "......#....#...#...#.###....##.",
  "#...####...###.##..#.#.#..##...",
  "......###....###..##......#..##",
  ".#.####.###..#.....#...#..#...#",
  ".###.#.....#..#.#..#.....##..##",
  "...##...#.####....#......###...",
  "...##.......#.#..#......#.#....",
  "......##....#......#.........#.",
  "............#....#............#",
  "..#.#..........#......#..#.....",
  ".#...#.#.#......#..##..#....##.",
  "..##.#.#.#..#...###..#.#.##.#..",
  "..#......#.........#.......#...",
  "...#...##.#.##......#.....#....",
  "..#.....#..##....#..##..#.#.##.",
  "....##....#.#...#..##.##.##....",
  "..#.............#...#......#...",
  ".#.#.#.##..#.#..##...#.........",
  ".##...........#..#.#........#..",
  ".#..##.....#....#...#...#......",
  "#.#.....##.#..#...######....#..",
  "....#..#...##...#.........###..",
  "..##.#...##..#......#.##..#...#",
  "##..##...........#.......#.#...",
  ".......##..##...###.##.......#.",
  ".#.##...#.##...............#...",
  ".......#.............#.......##",
  "......#...........#...#..##....",
  ".#..#..#....#..........#......#",
  "...........#..#.....#....##....",
  "###....#....##..#..##.....##...",
  "#........#........#...#.##.##..",
  "##.#.#........#..#.#..#.......#",
  ".##.#.....#............#.......",
  ".....#........#..##......##....",
  ".#.####.#.##..................#",
  "#...##.......#...#....#.#.##...",
  "#.#.##...#.#......#.....#....#.",
  ".........#....#...#....#.....#.",
  "...#..#..#.#..#.##........##.#.",
  "..#.##.#...#...#....#....##..#.",
  ".#..#...####..........#.......#",
  "....#...#...#...##.#.##......#.",
  ".#....#...#.#..##..##.#.....#..",
  ".....#....#......#.#####...###.",
  "..#...##..#......#.#....#.....#",
  ".##....##..###.#.....##.##.##..",
  "#...#.#.........#....#....#....",
  "...#.........#.##....##.#.#.#..",
  "...#...#.#....#..#.#.......#.#.",
  "#......#..#....##....#.........",
  "...........#......#......###..#",
  "#..#...#..##..#....#.....#.#.#.",
  "#.#.....##..#..........###..#..",
  "#...#.....#.......#..##...#....",
  "...#....##.....#..##..#....#...",
  "#...#.#......#..#...#........#.",
  ".#....#...#...#.........##....#",
  "..##...#.........#.......##..#.",
  "......#.......#.....##....#..#.",
  ".....##..#...#............#.#.#",
  "...#....#.##..#...#.#....#.....",
  "...#...........#.##....#..##.##",
  "##......##....##...........#.#.",
  "..##..##......#...#.##.##..#...",
  ".#..##.#...##...#......###.##.#",
  "###.#....##..#..#.##..##...##..",
  "..#........##.#...#.......#....",
  ".....##....##.#.###.....#....#.",
  "#.##....#....##.....#..#.#.....",
  "#.........#..##...##.......##..",
  ".#....#......#.#...##..........",
  "##..##.....##....###..#...#.#.#",
  "..##.#.#..#......#.#....###..#.",
  ".#.##.....##.......##.#.##..#..",
  "..##...#........#.#.#.##.#..###",
  "........#.......#...##....#.#..",
  "...#..#...#.##..#...#.#.###.##.",
  "..#.#....#..#...#..##.........#",
  "#....#..##..##....#.........#..",
  ".......#.......#....#....#.#...",
  "...#.##...#...#..#....#.###.##.",
  "##.##...#..........#....#......",
  "#.##.#.....#..#............##.#",
  ".##...#.#.#.##...........#..##.",
  ".#...#....#.......##...##...#.#",
  ".#......#..#...#...#....#.#....",
  "...#..#..#...#..##..##.....#..#",
  ".#.##..#.#...#..#.#...#...#...#",
  "#.##..........#.##..#....#.....",
  "##....#.#..........#..#....#...",
  "..#..##.#.......#...#.##......#",
  "....##......#......#.#.#.##....",
  "###......#...##..#..........###",
  "##.#.##.....###.#..#.#......#..",
  "#.#.#........#..........#....#.",
  "...#.#..#.......#......##.#....",
  "......#.....#.#.#....###..#...#",
  ".........#...#..#####..#.#..#..",
  "..........#.#.#####.#..#.....#.",
  "....#.......#.#....#.....##..#.",
  "#...##.#..#.#........#.#..#..##",
  "#......#..#.#.....##......#.##.",
  ".##...#....#.##..#.....###..#..",
  "#....#.#..##....##..#.#####....",
  ".......##..........#......#....",
  "......#.#...#............#.....",
  ".......###.....##.#..#.#....#.#",
  "...#...#..........#....##...##.",
  ".#..#.#.#....#.#.....##..#.#..#",
  "......#.#..#....#..#...#.......",
  "##.#####............#.#.####.#.",
  "#.....###.#.......##...###....#",
  "......#.##..##.........#.#.....",
  ".#.#......#..#.##......#......#",
  ".#.#.#..#.#...##.....#..#.#..#.",
  ".#.#....#......................",
  "#.#..###...#...####.##.#....#.#",
  ".....#............#....#..#.##.",
  "#..#...#.#....#....#..#..#...#.",
  "...#.......#..#.#....#.......#.",
  ".#..#.#...#.#.####..#...#....##",
  "....#..#..............####....#",
  ".....#.#.###....#.#.#.#...#....",
  "..####..#.#.##.##.##....#..#...",
  ".#.#.#.###..#.##..............#",
  "..#.#..#...#.....#.......#.##..",
  ".#.#..#.....##...###.....#..#..",
  "..#..#......#.##..#......##..#.",
  ".....#.#.#..##..###.#..........",
  ".##......#...#.##.......#..#..#",
  ".......#...#.....###.##...##...",
  "..##..#.#.......#..............",
  "#.....#......#.#..#..#..#......",
  "..###.......##...#.##....#.....",
  ".....##...........##.....#...##",
  ".#.#.####....###.#.......#...##",
  "#.#..##.#.#.....#.#....#.......",
  ".........#.#..#...............#",
  "..##.#..#..#####.###.........#.",
  ".#........#...#...#...#.##.#..#",
  ".#.##..........#..##....#.#.#..",
  ".##......#....#.#....##.#.#.#..",
  ".......##.####..#..#.#..#.#...#",
  "...#.....#..##..###.#..##...#..",
  "#.......##..#####....#.......#.",
  "#.#.##.................#...###.",
  "................####...........",
  ".#..#......#...###.............",
  "......#.#.##.##.....#..........",
  ".......#..#.#............##....",
  "#........#..#....#......#.####.",
  "...#.#....##..#..#.............",
  "..#.#......#...#.#..#..........",
  "###...###...........#......#...",
  "#.###..###........###...#..###.",
  ".#.....#...#.#...........##....",
  "....#..##.....#..#......#......",
  "#.###.#........#.#.##..........",
  "#.#.#.#.#..#.#...#...##.#......",
  "..###.......###..#.#.#.#.#.....",
  "...#........#.......#.###..##..",
  ".#........#...#.#........#..##.",
  "#.......###..#....##.###...#..#",
  ".##....###..##...........##...#",
  "#...#..........#.....#..##..#..",
  "#..##..#..##.#.........##......",
  "..#.#..###..###.....#.......#..",
  "#...#...........##.#.#.###.....",
  "...#....#.....#.....#.##.#.##.#",
  "...........##.......####...#..#",
  "#.#...#..##..#.#..#..........#.",
  "..#...#.##........#.#..........",
  ".##.....#.#.#....#.#.......#.#.",
  ".......#.##...#.##....#.#...#..",
  "......#...##...###...#.....###.",
  "##......#.##.####.##...##......",
  "..#....#.#..###.#..##....#..#..",
  "...##..###.....###.....#.......",
  "...#.....#.#........#..#..##.#.",
  ".....................#.....#.#.",
  ".#...#...##.#..#..........#...#",
  "#.....#..#....#..#.......####..",
  ".##.......##......###.#..#...##",
  ".#.##..#...#..........##.......",
  "...##...........##..##......#..",
  "#....##.##...#......##.#.##.##.",
  "..##.##.#.#.#....#........#.#..",
  "....#......#......##..##.#.#...",
  ".............#.##...#..#...#...",
  ".#..#...#.........#...........#",
  "....#.....#..................#.",
  "........##............#...#..##",
  ".###.....##...#...#.##.....##..",
  "...##.#.........##.#.#..#......",
  "#...........##.#..#........#..#",
  "....#....#..##.#..##..#..#..#.#",
  "#..##..#............#...#.#.#..",
  "#......#..##......#...##..#...#",
  "....#.#..##.#.#...####...#.....",
  ".##..#..##....#...#....#...##.#",
  "##.....#.#........#....#.#.#...",
  "......#.#...##....#.###.....#.#",
  "..#..#............###.###.##.#.",
  "#..#.##.##.##..#...#.#.##..#...",
  "....#..#.#...#......#..###.....",
  ".#........#...###.....#...#....",
  "....##.##....#..#...#.#####.#.#",
  "...#..#...#.#.....#....#...###.",
  "..........####...##............",
  ".....#....##...##......#..#...#",
  "..#...#.####......#...#..#..###",
  ".#.....#....#..#...###..#.#....",
  "..#..#......#.#...#.....##....#",
  ".....##....#....#...#.....##...",
  "#............##.#....#.#.#..#..",
  "#......#......#....#.#..##.#...",
  "#.#......##.....#.#..##.#.#....",
  ".#.###..#.#......##...........#",
  "#.#.........##..#.#.##......#..",
  "##....####...##...........#....",
  "....###.#..##.#.#.##...##.....#",
  "..###.......##.......#......#..",
  "..#.###.##.#...................",
  "...#.#...#..#..#..##.###...#.#.",
  "#...#..#...#..#....#..#...#....",
  "....#........#.#.#.##.##.#..#.#",
  "...#....#.#...#..#....#.#.#....",
  "..#...#..##.#....##...###...##.",
  "#......#.....#.....#....####.#.",
  "...##.#..#.#.....#..#..##.#....",
  ".####.#..#...#.#......#......#.",
  "..#.#....#..#..##.#......##....",
  "....#...#.#..#...#...##........",
  "##..#.#....#..#.........#..##..",
  "...#.......#....#..##...###..##",
  "#......##.#..#..#..#..###.#.###",
  ".#..##.#...##...#.............#",
  "###.........#...###.#.#..#....#",
  ".#.....#..#........#.#.......#.",
  "#..#.#.....#.........###..#....",
  "#..##.....#.#....#.###.....#..#",
  "....#..#.......##..#.#..##....#",
  "##.##..#....#..#.#.###.........",
  "..##....#........#..#..#.##.#.#",
  ".#....#...##..#.#.....#..##..#.",
  "#..#.......#......#...#...#.##.",
  "...##.#......#.#..#......#.....",
  "......#...#.##.#....#...#.##.#.",
  "#.....#..#.#.#...##...#........",
  "....#.#..#.#.....#....#.#..#...",
  "....#.#...###............#.....",
  ".#.#...##.......#....#.##...#.#",
  ".....#.##......#.#..#...#....#.",
  ".###....#...#........#.........",
  "..#.....#..#.#.#..##...#..#....",
  "...###..#....#.....#.........##",
  "#....#....###...#.#............",
  ".#..##.....#...........#.#..#..",
  "..#.#.#.......##..#.#..........",
  ".#...#...####.#...#####.....#.#",
  "..#....##.....#..#...#.........",
  "#.#......#.##.........#......##",
  "..#.#...#.##..#....#....#.##...",
  "#....#......##.#..#......#.#.#.",
  "#.#.............##..#.#........",
  "..#.###.......##.....##.#..##.#",
  ".........#........#...#..#....#",
  ".........##.#.#..#..#....#....#",
  "##..#..#.#.....##.........#.#.#",
  "..##.##..#.##..........##.#..#.",
  "...#..#####.......#.........#..",
];

// Part 1

(function () {
  let posX = 0;

  let treeCount = 0;

  puzzleInput.forEach((row) => {
    if (posX > row.length) {
      const repeatedRow = row.repeat(parseInt(posX / row.length) + 1);
      if (repeatedRow[posX] === "#") {
        treeCount++;
      }
    } else if (row[posX] === "#") {
      treeCount++;
    }

    posX = posX + 3;
  });

  console.log("Part 1: " + treeCount);
})();

// Part 2
(function () {
  function treeCounter(right, down) {
    let posX = 0;

    let treeCount = 0;

    let rowCount = 0;

    const filteredPuzzleInput = puzzleInput.filter((row, index) => {
      if (index % down === 0) {
        return row;
      }
    });

    filteredPuzzleInput.forEach((row) => {
      if (posX > row.length) {
        const repeatedRow = row.repeat(parseInt(posX / row.length) + 1);
        if (repeatedRow[posX] === "#") {
          treeCount++;
        }
      } else if (row[posX] === "#") {
        treeCount++;
      }

      posX = posX + right;
    });

    return treeCount;
  }

  console.log(
    "Part 2: " +
      treeCounter(1, 1) *
        treeCounter(3, 1) *
        treeCounter(5, 1) *
        treeCounter(7, 1) *
        treeCounter(1, 2)
  );
})();
